
package javaapplication2;

import java.util.ArrayList;
import java.sql.*;  
import javax.swing.table.DefaultTableModel;

public class Premiumprofil extends javax.swing.JPanel {
Premium_list p;
String kullaniciadi;
int combo;
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DOMAIN_NAME = "localhost";
    static final String DB_NAME = "muzik_dosyam";
    static final String DB_URL = "jdbc:mysql://" + DOMAIN_NAME + "/" + DB_NAME;
    
     //  Database credentials
     static final String USER = "root";//MySQL connection'ın değerlerini değiştirdiyseniz, burayıda ona göre değiştirmelisiniz.
        static final String PASS = "cZ.;dIS1g";//MySQL connection'ın değerlerini değiştirdiyseniz, burayıda ona göre değiştirmelisiniz.
    
    public Premium_list getP() {
    return p;
    }

    public void setP(Premium_list p) {  
        this.p = p;
    }
   
    public Premiumprofil() {
        initComponents();
        
        
    }
public ArrayList<Onelist> useList(){
    ArrayList<Onelist> userList = new ArrayList<>();
     Connection conn = null;
       PreparedStatement psmt = null;
      PreparedStatement psmt3 = null;
    try{
            String sql = null;
            Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
           
            
            String sqlk="SELECT k.Kullanici_id FROM kullanici k WHERE k.Kullanici_adi = '"+kullaniciadi+"'";
             psmt3 = conn.prepareStatement(sqlk);
             ResultSet rs3 = psmt3.executeQuery();
             int id = -1;
             while(rs3.next())
            {  
             id = rs3.getInt(1);
            } 
            
              
            if(combo == 1)
            sql="SELECT * FROM sarki s, oynatma_listesi o  WHERE s.Tür = 'jazz' AND o.idsarki = s.SarkiID";
            if(combo == 2)
            sql="SELECT * FROM sarki s, oynatma_listesi o  WHERE s.Tür = 'pop' AND o.idsarki = s.SarkiID";
            if(combo == 3)
            sql="SELECT * FROM sarki s, oynatma_listesi o  WHERE s.Tür = 'klasik' AND o.idsarki = s.SarkiID";
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
            Onelist olist;
             
             
           while(rs.next()){
                 if(rs.getInt(10) == id){
     olist = new Onelist(rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8));
            userList.add(olist);}
            }
         
        } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    return userList;
    }
 public void showList(){
     
  ArrayList<Onelist> list = useList();
  DefaultTableModel a = null;
  if(combo == 1)
     a = (DefaultTableModel) jTable1.getModel();
  if(combo == 2)
     a = (DefaultTableModel) jTable2.getModel(); 
  if(combo == 3)
     a = (DefaultTableModel) jTable3.getModel();
  Object[] row = new Object[7];
  int imax = list.size();
     for (int i = 0; i < imax; i++) {
         
         row[0] = list.get(i).getA2();
         row[1] = list.get(i).getA3();
         row[2] = list.get(i).getA4();
         row[3] = list.get(i).getA5();
         row[4] = list.get(i).getA6();
         row[5] = list.get(i).getA7();
         row[6] = list.get(i).getA8();
       a.addRow(row);
     }  
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "TARIH", "SANATCI", "ALBUM", "TUR", "SURE", "VIEWED_COUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("POP CALMA LISTESI");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "TARIH", "SANATCI", "ALBUM", "TUR", "SURE", "VIEWED_COUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("KLASIK CALMA LISTESI");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "TARIH", "SANATCI", "ALBUM", "TUR", "SURE", "VIEWED_COUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable3);

        jButton1.setText("JAZZ HEPSINI EKLE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("POP HEPSINI EKLE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("KLASIK HEPSINI EKLE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("JAZZ CALMA LISTESI");

        jButton4.setText("SECILENI EKLE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("GERI");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable3MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jTable2.getRowCount(); i++) {
           String name = (String) jTable2.getValueAt(i, 0);
           
            Connection conn = null;
            PreparedStatement psmt = null;
            PreparedStatement psmt2 = null;
            PreparedStatement psmt3 = null;
             try{
            Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            String sql="SELECT s.SarkiID FROM sarki s WHERE s.Sarki_Adi = '"+name+"'"; 
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
         int sarki_id = -1;
         
           while(rs.next()){
            sarki_id = rs.getInt(1);
            }
            
            ////////////////////// oynatma listesinde sarki daha once eklendi mi? Eklendiyse int size degeri kac defa eklendiyse artar.
           String sql2="SELECT * FROM oynatma_listesi o WHERE o.idkullanici = "+p.ana.getId()+" AND o.idsarki = "+sarki_id+"";
            psmt2 = conn.prepareStatement(sql2);
            ResultSet rs2 = psmt2.executeQuery();
               int size = rs2.getRow();//getrow mevcut bulundugu satirdan yukari dogru kac satir oldugunu sayar. O yuzden en son satira gidiyoruz.
            while(rs2.next()){
            size = rs2.getRow();
            }
      //  System.out.println(size);
        ///////////////////////////
        if(size == 0){
            String sql3="SELECT MAX(no_id) FROM oynatma_listesi";
            psmt3= conn.prepareStatement(sql3);
            ResultSet rs3 = psmt3.executeQuery();
            int noo = 0;
            while(rs3.next())
            {
              noo = rs3.getInt(1);
            }
            noo++;
            Statement st = conn.createStatement(); 
            st.executeUpdate("INSERT INTO oynatma_listesi VALUES ("+noo+","+p.ana.getId()+","+sarki_id+")");
        }
            
          } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } 
                   
                   
        } 
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
         String a1 = null;
        if(jTable1.isRowSelected(jTable1.getSelectedRow())){
    a1 = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
        }
        if(jTable2.isRowSelected(jTable2.getSelectedRow())){
    a1 = (String) jTable2.getValueAt(jTable2.getSelectedRow(), 0);
        }
        if(jTable3.isRowSelected(jTable3.getSelectedRow())){
    a1 = (String) jTable3.getValueAt(jTable3.getSelectedRow(), 0);
        }
       
        Connection conn = null;
         PreparedStatement psmt = null;
         PreparedStatement psmt2 = null;
         PreparedStatement psmt3 = null;
    try{//SARKI ID'SI ALINIYOR
            Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
           
            String sql="SELECT s.SarkiID FROM sarki s WHERE s.Sarki_Adi = '"+a1+"'"; 
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
         int sarki_id = -1;
       
           while(rs.next()){
            sarki_id = rs.getInt(1);
            }
           
           ////////////////////// oynatma listesinde sarki daha once eklendi mi? Eklendiyse int size degeri kac defa eklendiyse artar.
           String sql2="SELECT * FROM oynatma_listesi o WHERE o.idkullanici = "+p.ana.getId()+" AND o.idsarki = "+sarki_id+"";
            psmt2 = conn.prepareStatement(sql2);
            ResultSet rs2 = psmt2.executeQuery();
               int size = rs2.getRow();
            while(rs2.next()){
            size = rs2.getRow();
            }
      //  System.out.println(size);
        ///////////////////////////
        if(size == 0){
            String sql3="SELECT MAX(no_id) FROM oynatma_listesi";
            psmt3= conn.prepareStatement(sql3);
            ResultSet rs3 = psmt3.executeQuery();
            int noo = 0;
            while(rs3.next())
            {
              noo = rs3.getInt(1);
            }
            noo++;
            Statement st = conn.createStatement(); 
            st.executeUpdate("INSERT INTO oynatma_listesi VALUES ("+noo+","+p.ana.getId()+","+sarki_id+")");
        }
            } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } 
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        p.Premium_listgoster();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jTable1.getRowCount(); i++) {
           String name = (String) jTable1.getValueAt(i, 0);
           
            Connection conn = null;
            PreparedStatement psmt = null;
            PreparedStatement psmt2 = null;
            PreparedStatement psmt3 = null;
             try{
            Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            String sql="SELECT s.SarkiID FROM sarki s WHERE s.Sarki_Adi = '"+name+"'"; 
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
         int sarki_id = -1;
         
           while(rs.next()){
            sarki_id = rs.getInt(1);
            }
            
            ////////////////////// oynatma listesinde sarki daha once eklendi mi? Eklendiyse int size degeri kac defa eklendiyse artar.
           String sql2="SELECT * FROM oynatma_listesi o WHERE o.idkullanici = "+p.ana.getId()+" AND o.idsarki = "+sarki_id+"";
            psmt2 = conn.prepareStatement(sql2);
            ResultSet rs2 = psmt2.executeQuery();
               int size = rs2.getRow();//getrow mevcut bulundugu satirdan yukari dogru kac satir oldugunu sayar. O yuzden en son satira gidiyoruz.
            while(rs2.next()){
            size = rs2.getRow();
            }
      //  System.out.println(size);
        ///////////////////////////
        if(size == 0){
            String sql3="SELECT MAX(no_id) FROM oynatma_listesi";
            psmt3= conn.prepareStatement(sql3);
            ResultSet rs3 = psmt3.executeQuery();
            int noo = 0;
            while(rs3.next())
            {
              noo = rs3.getInt(1);
            }
            noo++;
            Statement st = conn.createStatement(); 
            st.executeUpdate("INSERT INTO oynatma_listesi VALUES ("+noo+","+p.ana.getId()+","+sarki_id+")");
        }
            
          } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } 
                   
                   
        } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jTable3.getRowCount(); i++) {
           String name = (String) jTable3.getValueAt(i, 0);
           
            Connection conn = null;
            PreparedStatement psmt = null;
            PreparedStatement psmt2 = null;
            PreparedStatement psmt3 = null;
             try{
            Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            String sql="SELECT s.SarkiID FROM sarki s WHERE s.Sarki_Adi = '"+name+"'"; 
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
         int sarki_id = -1;
         
           while(rs.next()){
            sarki_id = rs.getInt(1);
            }
            
            ////////////////////// oynatma listesinde sarki daha once eklendi mi? Eklendiyse int size degeri kac defa eklendiyse artar.
           String sql2="SELECT * FROM oynatma_listesi o WHERE o.idkullanici = "+p.ana.getId()+" AND o.idsarki = "+sarki_id+"";
            psmt2 = conn.prepareStatement(sql2);
            ResultSet rs2 = psmt2.executeQuery();
               int size = rs2.getRow();//getrow mevcut bulundugu satirdan yukari dogru kac satir oldugunu sayar. O yuzden en son satira gidiyoruz.
            while(rs2.next()){
            size = rs2.getRow();
            }
      //  System.out.println(size);
        ///////////////////////////
        if(size == 0){
            String sql3="SELECT MAX(no_id) FROM oynatma_listesi";
            psmt3= conn.prepareStatement(sql3);
            ResultSet rs3 = psmt3.executeQuery();
            int noo = 0;
            while(rs3.next())
            {
              noo = rs3.getInt(1);
            }
            noo++;
            Statement st = conn.createStatement(); 
            st.executeUpdate("INSERT INTO oynatma_listesi VALUES ("+noo+","+p.ana.getId()+","+sarki_id+")");
        }
            
          } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } 
                   
                   
        } 
        
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
public class Onelist{
String a2,a3,a4,a5,a6,a7,a8;
    public Onelist(String a2, String a3, String a4, String a5, String a6, String a7, String a8){
   
   this.a2 = a2;
   this.a3 = a3;
   this.a4 = a4;
   this.a5 = a5;
   this.a6 = a6;
   this.a7 = a7;
   this.a8 = a8;
    }


        public String getA2() {
            return a2;
        }

        public String getA3() {
            return a3;
        }

        public String getA4() {
            return a4;
        }

        public String getA5() {
            return a5;
        }

        public String getA6() {
            return a6;
        }

        public String getA7() {
            return a7;
        }

        public String getA8() {
            return a8;
        }
    
}

    public void setCombo(int combo) {
        this.combo = combo;
    }

}
