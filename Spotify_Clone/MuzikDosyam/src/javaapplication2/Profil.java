
package javaapplication2;


import java.util.ArrayList;
import java.sql.*;  
import javax.swing.table.DefaultTableModel;

public class Profil extends javax.swing.JPanel {
    int combo;
    Anasayfa ana;
   

    public Anasayfa getAna() {
        return ana;
    }

    public void setAna(Anasayfa ana) {
        this.ana = ana;
    }
    static final String JDBC_DRIVER = "com.mysql.cj.jdbc.Driver";
    static final String DOMAIN_NAME = "localhost";
    static final String DB_NAME = "muzik_dosyam";
    static final String DB_URL = "jdbc:mysql://" + DOMAIN_NAME + "/" + DB_NAME;
    
     //  Database credentials
     static final String USER = "root";//MySQL connection'ın değerlerini değiştirdiyseniz, burayıda ona göre değiştirmelisiniz.
     static final String PASS = "cZ.;dIS1g";//MySQL connection'ın değerlerini değiştirdiyseniz, burayıda ona göre değiştirmelisiniz. 
  
    public Profil() {
       
        initComponents();
        
    }
     public ArrayList<Onelist> useList(){
    ArrayList<Onelist> userList = new ArrayList<>();
     Connection conn = null;
       PreparedStatement psmt = null;
         
    try{
            String sql = null;
            Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            
            if(combo == 1)
            sql="SELECT * FROM sarki s, oynatma_listesi o  WHERE s.Tür = 'jazz' AND o.idsarki = s.SarkiID ";
            if(combo == 2)
            sql="SELECT * FROM sarki s, oynatma_listesi o  WHERE s.Tür = 'pop' AND o.idsarki = s.SarkiID ";
            if(combo == 3)
            sql="SELECT * FROM sarki s, oynatma_listesi o  WHERE s.Tür = 'klasik' AND o.idsarki = s.SarkiID ";
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
            Onelist olist;
          
           while(rs.next()){
               if(rs.getInt(10) == ana.getId()){
     olist = new Onelist(rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8));
            userList.add(olist);}
            }
         
        } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    return userList;
    }
 public void showList(){
     
  ArrayList<Onelist> list = useList();
  DefaultTableModel a = null;
  if(combo == 1)
     a = (DefaultTableModel) jTable1.getModel();
  if(combo == 2)
     a = (DefaultTableModel) jTable2.getModel(); 
  if(combo == 3)
     a = (DefaultTableModel) jTable3.getModel();
  Object[] row = new Object[7];
  int imax = list.size();
     for (int i = 0; i < imax; i++) {
         
         row[0] = list.get(i).getA2();
         row[1] = list.get(i).getA3();
         row[2] = list.get(i).getA4();
         row[3] = list.get(i).getA5();
         row[4] = list.get(i).getA6();
         row[5] = list.get(i).getA7();
         row[6] = list.get(i).getA8();
       a.addRow(row);
     }  
 }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "TARIH", "SANATCI", "ALBUM", "TUR", "SURE", "VIEWED_COUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "TARIH", "SANATCI", "ALBUM", "TUR", "SURE", "VIEWED_COUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable3);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "TARIH", "SANATCI", "ALBUM", "TUR", "SURE", "VIEWED_COUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("JAZZ CALMA LISTESI");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("KLASIK CALMA LISTESI");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("POP CALMA LISTESI");

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("GERI");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Dinle");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("JAZZ TAMAMINI SIL");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("POP TAMAMINI SIL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setText("KLASIK TAMAMINI SIL");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("SECILENI SIL");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(720, 720, 720)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(8, 8, 8)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton6)
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButton1)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable3MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
       this.setVisible(false);
       
        ana.anasayfagoster();
     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
       
   Connection conn = null;
    try{
        String sarkiadi = null;
        String dsayisi = null;
        
        if(jTable1.isRowSelected(jTable1.getSelectedRow())){
           combo = 1;
         sarkiadi = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
         dsayisi = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 6);}
        
        if(jTable2.isRowSelected(jTable2.getSelectedRow())){
             combo = 2;
         sarkiadi = (String) jTable2.getValueAt(jTable2.getSelectedRow(), 0);
         dsayisi = (String) jTable2.getValueAt(jTable2.getSelectedRow(), 6);}
        
        if(jTable3.isRowSelected(jTable3.getSelectedRow())){
             combo = 3;
         sarkiadi = (String) jTable3.getValueAt(jTable3.getSelectedRow(), 0);
         dsayisi = (String) jTable3.getValueAt(jTable3.getSelectedRow(), 6);}
        
         int dinlenmesayisi = Integer.parseInt(dsayisi)+1;
          
            Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
            
            String query = "update sarki set Dinlenme_sayisi = ? where Sarki_Adi = ?";
            PreparedStatement preparedStmt = conn.prepareStatement(query);
            preparedStmt.setInt   (1, dinlenmesayisi);
             preparedStmt.setString(2, sarkiadi);
           preparedStmt.executeUpdate();
           conn.close();
    cleantable();
      showList();
      
        } catch (SQLException | ClassNotFoundException se) {
            //Handle errors for JDBC

        }
        //Handle errors for Class.forName
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         Connection conn = null;
           PreparedStatement psmt = null;
    try{
        String name = null;
        
        if(jTable1.isRowSelected(jTable1.getSelectedRow())){
           combo = 1;
         name = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
       }
        
        if(jTable2.isRowSelected(jTable2.getSelectedRow())){
             combo = 2;
         name = (String) jTable2.getValueAt(jTable2.getSelectedRow(), 0);
         }
        
        if(jTable3.isRowSelected(jTable3.getSelectedRow())){
             combo = 3;
         name = (String) jTable3.getValueAt(jTable3.getSelectedRow(), 0);
       }
        Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
        
            String sql="SELECT s.SarkiID FROM sarki s WHERE s.Sarki_Adi = '"+name+"'"; 
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
         int sarki_id = -1;
         
           while(rs.next()){
            sarki_id = rs.getInt(1);
            }
           
        String query = "delete from oynatma_listesi where idkullanici = "+ana.getId()+" AND idsarki = "+sarki_id+"";
          Statement st = conn.createStatement(); 
            st.executeUpdate(query);
      // execute the preparedstatement
   cleantable();
      showList();
        
        } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      
        for (int i = 0; i < jTable1.getRowCount(); i++) {
        String name = (String) jTable1.getValueAt(i, 0);
        Connection conn = null;
        PreparedStatement psmt = null;
    try{
         Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
        
            String sql="SELECT s.SarkiID FROM sarki s WHERE s.Sarki_Adi = '"+name+"'"; 
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
         int sarki_id = -1;
         
           while(rs.next()){
            sarki_id = rs.getInt(1);
            }
           
        String query = "delete from oynatma_listesi where idkullanici = "+ana.getId()+" AND idsarki = "+sarki_id+"";
          Statement st = conn.createStatement(); 
            st.executeUpdate(query);
      // execute the preparedstatement
   
        
        
         } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } 
        
        }
         combo =  1;
      cleantable();
      showList();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jTable2.getRowCount(); i++) {
        String name = (String) jTable2.getValueAt(i, 0);
        Connection conn = null;
        PreparedStatement psmt = null;
    try{
         Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
        
            String sql="SELECT s.SarkiID FROM sarki s WHERE s.Sarki_Adi = '"+name+"'"; 
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
         int sarki_id = -1;
         
           while(rs.next()){
            sarki_id = rs.getInt(1);
            }
           
        String query = "delete from oynatma_listesi where idkullanici = "+ana.getId()+" AND idsarki = "+sarki_id+"";
          Statement st = conn.createStatement(); 
            st.executeUpdate(query);
      // execute the preparedstatement
   
        
        
         } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } 
        
        }
         combo =  2;
      cleantable();
      showList();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < jTable3.getRowCount(); i++) {
        String name = (String) jTable3.getValueAt(i, 0);
        Connection conn = null;
        PreparedStatement psmt = null;
    try{
         Class.forName("com.mysql.cj.jdbc.Driver");  
            conn = DriverManager.getConnection(DB_URL, USER, PASS);
        
            String sql="SELECT s.SarkiID FROM sarki s WHERE s.Sarki_Adi = '"+name+"'"; 
            psmt = conn.prepareStatement(sql);
            ResultSet rs = psmt.executeQuery();// SELECT li sql querylerinde kullanıyoruz.
         int sarki_id = -1;
         
           while(rs.next()){
            sarki_id = rs.getInt(1);
            }
           
        String query = "delete from oynatma_listesi where idkullanici = "+ana.getId()+" AND idsarki = "+sarki_id+"";
          Statement st = conn.createStatement(); 
            st.executeUpdate(query);
      // execute the preparedstatement
   
        
        
         } catch (SQLException se) {
            //Handle errors for JDBC
            se.printStackTrace();
        } catch (Exception e) {
            //Handle errors for Class.forName
            e.printStackTrace();
        } 
        
        }
         combo =  3;
      cleantable();
      showList();
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
public class Onelist{
String a2,a3,a4,a5,a6,a7,a8;
    public Onelist(String a2, String a3, String a4, String a5, String a6, String a7, String a8){
   
   this.a2 = a2;
   this.a3 = a3;
   this.a4 = a4;
   this.a5 = a5;
   this.a6 = a6;
   this.a7 = a7;
   this.a8 = a8;
    }


        public String getA2() {
            return a2;
        }

        public String getA3() {
            return a3;
        }

        public String getA4() {
            return a4;
        }

        public String getA5() {
            return a5;
        }

        public String getA6() {
            return a6;
        }

        public String getA7() {
            return a7;
        }

        public String getA8() {
            return a8;
        }
    
}

    public void setCombo(int combo) {
        this.combo = combo;
    }

public void cleantable()
{
  DefaultTableModel dm = null;
  if(combo == 1)
     dm = (DefaultTableModel) jTable1.getModel();
  if(combo == 2)
     dm = (DefaultTableModel) jTable2.getModel(); 
  if(combo == 3)
     dm = (DefaultTableModel) jTable3.getModel();
int rowCount = dm.getRowCount();
//Remove rows one by one from the end of the table
for (int i = rowCount - 1; i >= 0; i--) {
    dm.removeRow(i);
}
}
}
